-- Tagesaufgabe


/*
   Arbeitet als Gruppe weiter an der Datenbank mein Shop, die ihr gestern normalisiert habt.
   Erstellt zunächst in einem Tool Eurer Wahl ein Entity-Relationship-Diagramm.
   Wenn Ihr damit zufrieden seid, teilt es im Team-Chat!
   Setzt dann in der Datenbank noch fehlende Primärschlüssel sowie die zugehörigen Fremdschlüssel.
   Macht ein Screenshot Eures Diagramms in Pycharm und teilt auch dieses im Chat.
   Ladet das ausgefüllte Skript sowie die Screenshots auf Moodle hoch.
 */

-- DROP DATABASE IF EXISTS my_shop;
-- CREATE DATABASE my_shop;

---
CREATE TABLE IF NOT EXISTS unnormalized_shop
(
	order_id         INT PRIMARY KEY,
	customer_name    VARCHAR(120),
	product_name     VARCHAR(55),
	product_price    DECIMAL(12, 2),
	order_date       DATE,
	product_category VARCHAR(55),
	customer_mail    VARCHAR(120),
	address          VARCHAR(255),
	employee_name    VARCHAR(120),
	employee_phone   VARCHAR(30)
);

COPY unnormalized_shop
	FROM 'C:\Users\Admin\OneDrive\Dokumente\DataCraft\DataAnalyst_Aug.24\08_Datenbanken_und_SQL\Tag_12_Normalisierung\Tutorium\my_sql_shop.csv'
	DELIMITER ';'
	CSV HEADER;

---

CREATE TABLE shop_1nf AS
	(SELECT order_id,
			SPLIT_PART(customer_name, ', ', 1) AS customer_lastname,
			SPLIT_PART(customer_name, ', ', 2) AS customer_firstname,
			product_name,
			product_price,
			order_date,
			product_category,
			address,
			SPLIT_PART(employee_name, ', ', 1) AS employee_lastname,
			SPLIT_PART(employee_name, ', ', 2) AS employee_firstname,
			employee_phone
	 FROM unnormalized_shop);

---
-- DROP TABLE customers;

CREATE TABLE customers AS
	(SELECT DISTINCT customer_lastname, customer_firstname
	 FROM shop_1nf);

-- ID-Spalte als Primärschlüssel hinzufügen:
ALTER TABLE customers
	ADD COLUMN customer_id INT PRIMARY KEY
		GENERATED BY DEFAULT AS IDENTITY;

---
-- DROP TABLE products;

CREATE TABLE products AS
	(SELECT DISTINCT product_name,
					 product_category,
					 product_price
	 FROM shop_1nf);

ALTER TABLE products
	ADD COLUMN product_id INT PRIMARY KEY
		GENERATED BY DEFAULT AS IDENTITY;

---
-- DROP TABLE categories;

CREATE TABLE categories
AS
SELECT DISTINCT product_category
FROM products;

ALTER TABLE categories
	ADD COLUMN category_id INT PRIMARY KEY
		GENERATED BY DEFAULT AS IDENTITY;

---

CREATE TABLE prod_temp
AS (SELECT product_id,
		   product_name,
		   product_price,
		   category_id
	FROM products
			 JOIN categories USING (product_category));

DROP TABLE products;

ALTER TABLE prod_temp
	RENAME TO products;

---

-- DROP TABLE employees;

CREATE TABLE employees AS
	(SELECT DISTINCT employee_lastname,
					 employee_firstname,
					 employee_phone
	 FROM shop_1nf);

ALTER TABLE employees
	ADD COLUMN employee_id INT PRIMARY KEY
		GENERATED BY DEFAULT AS IDENTITY;

---

-- Die Faktentabelle:
SELECT order_id,
	   order_date,
	   c.customer_id,
	   e.employee_id,
	   p.product_id
FROM shop_1nf
		 JOIN employees e
			  USING (employee_lastname, employee_firstname, employee_phone)
		 JOIN customers c
			  USING (customer_lastname, customer_firstname)
		 JOIN products p
			  USING (product_name, product_price);

---

-- DROP TABLE orders;

CREATE TABLE orders AS (SELECT order_id,
							   order_date,
							   c.customer_id,
							   e.employee_id,
							   p.product_id
						FROM shop_1nf
								 JOIN employees e
									  USING (employee_lastname, employee_firstname, employee_phone)
								 JOIN customers c
									  USING (customer_lastname, customer_firstname)
								 JOIN products p
									  USING (product_name, product_price));

ALTER TABLE orders
	ADD PRIMARY KEY (order_id);


ALTER TABLE orders
	ADD CONSTRAINT fk_orders_customers
		FOREIGN KEY (customer_id) REFERENCES customers (customer_id);

ALTER TABLE orders
	ADD CONSTRAINT fk_orders_products
		FOREIGN KEY (product_id) REFERENCES products (product_id);

ALTER TABLE orders
	ADD CONSTRAINT fk_orders_employees
		FOREIGN KEY (employee_id) REFERENCES employees (employee_id);

ALTER TABLE products
	ADD CONSTRAINT fk_products_categories
		FOREIGN KEY (category_id) REFERENCES categories (category_id);

DROP TABLE unnormalized_shop;